require("src.scripts.utils.utils")
local GAMESTATE = require("src.scripts.gamestate")

--local TILE_WIDTH = 16
--local TILE_HEIGHT = 16

--local topOffset = gameHeight - TILE_HEIGHT
--local MAP_WIDTH = 16

local GIFT_Z_ORDER = { 0.1, 0.2, 0.3 }
local SANTA_TIMING = 3.0

go.property("gift_to_create", 0)

-------------------------------------------------------------------------------------------------------------

function init(self)
	-- Set zoom factor depending of device
	Camera_Set_Zoom_Level()

	self.gifts = 0

	-- Create bags
	CreateBag(1,1)
	CreateBag(2,2)
	CreateBag(3,3)

	-- Display Santa and create gifts
	InitializeGifts(self, 0)
	--timer.delay(SANTA_TIMING + 1, false, function ()
	--	InitializeGifts(self, 1)
	--end)
end

function on_message(self, message_id, message, sender)
	---------------------------------------------------------------
	-- If the user put a gift into the bag
	if message_id == hash("gift_in_bag") then
		local gift_color = message.gift_color
		local bag_color = message.bag_color
		local giftID = message.giftID

		if gift_color == bag_color then
			GAMESTATE.score = GAMESTATE.score + 1
			sound.play("/sounds#gift_correct")
		else
			if GAMESTATE.score > 0 then
				GAMESTATE.score = GAMESTATE.score - 1
				sound.play("/sounds#gift_incorrect")
			end
		end

		-- Update the score
		msg.post("/GUI#game", "update_score")

		-- Delete the gift
		go.delete(giftID)
		self.gifts = self.gifts - 1

		if self.gifts <= 0 then
			print("TODO: WIN")
		end
	end

	---------------------------------------------------------------
	-- Time is out
	if message_id == hash("timeout") then
		print("TODO: TIMEOUT")
	end
end

function update(self, dt) end
function final(self) end
function on_input(self, action_id, action) end
function on_reload(self) end

-------------------------------------------------------------------------------------------------------------

-- Display Santa and create gifts
-- pDirection : 0 = left to right    1 = right to left
function InitializeGifts(self, pDirection)
	-- Animate Santa in the sky
	sound.play("/sounds#santa_ohoh")
	sprite.play_flipbook("/santa_sleigh#sprite", "run")
	if pDirection == 1 then
		sprite.set_hflip("/santa_sleigh#sprite", true)
		go.set_position(vmath.vector3((gameWidth+1000)/ZOOM_LEVEL, (gameHeight-80)/ZOOM_LEVEL, 1), "/santa_sleigh")
		go.animate("/santa_sleigh", "position.x", go.PLAYBACK_ONCE_FORWARD, -100, go.EASING_LINEAR, SANTA_TIMING)
	else
		go.set_position(vmath.vector3(-100, (gameHeight-80)/ZOOM_LEVEL, 1), "/santa_sleigh")
		go.animate("/santa_sleigh", "position.x", go.PLAYBACK_ONCE_FORWARD, (gameWidth+1000)/ZOOM_LEVEL, go.EASING_LINEAR, SANTA_TIMING)
	end

	-- Wait 1 second, then create gifts
	timer.delay(1.0, false, function ()
		-- Create gifts
		--CreateGifts(self, self.gift_to_create)
		timer.delay(SANTA_TIMING/self.gift_to_create, true, function (self,pbar_timer,_)
			CreateGifts(self, 1)

			if self.gifts >= self.gift_to_create then
				timer.cancel(pbar_timer)
			end
		end)

	end)
end


-- Create new gifts using the gift prototype
function CreateGifts(self, pCount)
	for i=1, pCount do
		-- Z axis on 3 values : 0.1, 0.2 or 0.3   (1 = in back  2 = middle   3 = in front)
		local index = math.random(1,3)
		local z = GIFT_Z_ORDER[index]
		local pos = vmath.vector3(math.random(40, (gameWidth-50)/ZOOM_LEVEL), math.random(gameHeight-250, gameHeight-200)/ZOOM_LEVEL, z)

		factory.create("/giftFactory#factory", pos, nil, { position = pos, z_index = index }, 0.6 + z)
		self.gifts = self.gifts + 1
	end
end

-- Create bags using the bag prototype
-- pColor : BLUE = 1, GREEN = 2, RED = 3
-- pPosition : LEFT = 1, CENTER = 2, RIGHT = 3
function CreateBag(pColor, pPosition)
	local pos = vmath.vector3()
	if pPosition == 1 then
		pos = vmath.vector3(37,90,0)
	elseif pPosition == 2 then
		pos = vmath.vector3(96,90,0)
	elseif pPosition == 3 then
		pos = vmath.vector3(150,90,0)
	end

	factory.create("/bagFactory#factory", pos, nil, { color = pColor }, 1.0)
end
