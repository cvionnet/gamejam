require("src.scripts.utils.utils")
local GAMESTATE = require("src.scripts.gamestate")

--local TILE_WIDTH = 16
--local TILE_HEIGHT = 16

--local topOffset = gameHeight - TILE_HEIGHT
--local MAP_WIDTH = 16

-- GAMEPLAY
local SNOW_TO_CREATE = 40

local SNOW_APPEARANCE = 10		-- Add a snow effect every X gifts the player add in the correct bag
local SANTA_APPEARANCE = 7 --20		-- Santa adds gifts every X gifts the player add in a bag
local ADD_TIME = 5 		-- Add time every X gifts the player add in a bag

local MAXIMUM_GIFTS = 25 	-- Gameover if gifts on the screen exceed this value

local GIFT_Z_ORDER = { 0.1, 0.2, 0.3 }
local SANTA_TIMING = 3.0		-- How much time Santa need to cross the screen

go.property("gift_to_create", 0)

-------------------------------------------------------------------------------------------------------------

function init(self)
	-- Set zoom factor depending of device
	Camera_Set_Zoom_Level()

	self.totalGifts = 0
	self.correctGifts = 0
	self.giftSequence = 0		-- give more points if the player sort-out 5 gifts with the same color
	self.giftLastColor = 0
	self.santa_direction = 0	-- 0 = left to right    1 = right to left
	self.santa_lastAppareance = nil		-- save the time when Santa appears (force it to appear or control that he do not apprear too much)

	GAMESTATE.state = "START"

	-- Create bags
	CreateBag(1,1)
	CreateBag(2,2)
	CreateBag(3,3)

	-- Display Santa and create gifts
	InitializeGifts(self, 0, true)
	self.santa_lastAppareance = os.time()
	--timer.delay(SANTA_TIMING + 1, false, function ()
	--	InitializeGifts(self, 1)
	--end)
end

function on_message(self, message_id, message, sender)
	if GAMESTATE.state == "GAME" then
		---------------------------------------------------------------
		-- If the user put a gift into the bag
		if message_id == GAME.GIFT_IN_BAG then
			local gift_color = message.gift_color
			local bag_color = message.bag_color
			local giftID = message.giftID
			local gift_type = message.gift_type
			local bagID = message.bagID
			local point_earn = 0

			-- Get the position of the bag
			local bag_x = go.get_position(bagID).x
			local bag_y = go.get_position(bagID).y

			-- Gift put in the correct bag
			if gift_color == bag_color then
				self.correctGifts = self.correctGifts + 1
				sound.play("/sounds#gift_correct")

				-- GAMEPLAY - Check if the player sort-out a sequence with the same color (give more points)
				if self.giftLastColor == gift_color then
					self.giftSequence = self.giftSequence + 1
				else
					self.giftLastColor = gift_color
					self.giftSequence = 0
				end

				if self.giftSequence >= 5 then
					-- GAMEPLAY - Earn points from the gift + a bonus sequence
					point_earn = gift_type + 10
					self.giftSequence = 0
				else
					-- GAMEPLAY - Earn more points with smaller gifts   (1 = big   2 = middle   3 = small)
					point_earn = gift_type
				end

				-- Add a particle effect above the bag
				CreateStarEffect(10, bag_x, bag_y)

				-- GAMEPLAY - Add snow effect each XX correct gift put in a bag
				if (self.correctGifts % SNOW_APPEARANCE) == 0 then
					CreateSnowEffect(SNOW_TO_CREATE)
				end

				-- GAMEPLAY - Add time each XX correct gift put in a bag
				if (self.correctGifts % ADD_TIME) == 0 then
					msg.post("/GUI#game", "add_time", { time = 10 })
				end
			-- Gift put in the incorrect bag
			else
				sound.play("/sounds#gift_incorrect")
				msg.post("camera", "shake", { intensity = 0.002, duration = 0.5, direction = "both" })

				if GAMESTATE.score > 0 then
					point_earn = -1
				end
			end

			-- Update the score
			GAMESTATE.score = GAMESTATE.score + point_earn
			msg.post("/GUI#game", "update_score", { points = point_earn, bag_position = vmath.vector3((bag_x + 2) * ZOOM_LEVEL,bag_y * ZOOM_LEVEL,0) })

			-- Delete the gift
			go.delete(giftID)
			self.totalGifts = self.totalGifts - 1

			if self.totalGifts <= 0 then
				print("TODO: WIN")
				msg.post("main:/loader#main", "change_scene", { scene = "sceneGameover" })
			end

			-- GAMEPLAY - Add new gifts
			if (self.correctGifts % SANTA_APPEARANCE) == 0 then
				-- Check that Santa do not appears less 5 seconds before
				if self.santa_lastAppareance == nil or os.difftime(os.time(), self.santa_lastAppareance) > 5 then
					self.santa_lastAppareance = os.time()
					InitializeGifts(self, math.random(3,5), false)
				end
			else
				-- Display Santa every XX seconds
				if os.difftime(os.time(), self.santa_lastAppareance) > 15 then
					self.santa_lastAppareance = os.time()
					InitializeGifts(self, math.random(3,5), false)
				end
			end

			-- Update Santa face
			msg.post("/santa_face#santa_face", "change_santa_face", { giftsonscreen = self.totalGifts })

			-- GAMEPLAY - Gameover if gifts on screen exceed max value
			if self.totalGifts >= MAXIMUM_GIFTS then
				print("TODO: LOOSE - MAX GIFT")
				msg.post("main:/loader#main", "change_scene", { scene = "sceneGameover" })
			end
		end

		---------------------------------------------------------------
		-- GAMEPLAY - Time is out
		if message_id == hash("timeout") then
			print("TODO: LOOSE - TIMEOUT")
			msg.post("main:/loader#main", "change_scene", { scene = "sceneGameover" })
		end
	end
end

function update(self, dt) end
function final(self) end
function on_input(self, action_id, action) end
function on_reload(self) end

-------------------------------------------------------------------------------------------------------------

-- Display Santa and create gifts
-- pGifttoCreate : 0 = use default value    XX = force a value
function InitializeGifts(self, pGifttoCreate, pStartTimer)
	local gifttocreate = 0

	if pGifttoCreate then gifttocreate = self.gift_to_create
	else gifttocreate = pGifttoCreate end

	-- Animate Santa in the sky
	Animate_Santa(self)

	-- Wait 1 second, then create gifts
	timer.delay(1.0, false, function ()
		-- Create gifts
		--CreateGifts(self, self.gift_to_create)
		timer.delay(SANTA_TIMING/gifttocreate, true, function (self,pbar_timer,_)

			CreateGifts(self, 1)
			gifttocreate = gifttocreate - 1

			-- Check if all gifts have been created
			if gifttocreate <= 0 then 		--self.totalGifts >= gifttocreate then
				timer.cancel(pbar_timer)

				-- Start the game and the timer
				if pStartTimer then
					GAMESTATE.state = "GAME"
					msg.post("/GUI#game", "start_timer")
				end
			end
		end)
	end)
end


function Animate_Santa(self)
	sound.play("/sounds#santa_ohoh")

	sprite.play_flipbook("/santa_sleigh#sprite", "run")
	if self.santa_direction == 1 then
		self.santa_direction = 0
		sprite.set_hflip("/santa_sleigh#sprite", true)
		go.set_position(vmath.vector3((gameWidth+1000)/ZOOM_LEVEL, (gameHeight-80)/ZOOM_LEVEL, 1), "/santa_sleigh")
		go.animate("/santa_sleigh", "position.x", go.PLAYBACK_ONCE_FORWARD, -100, go.EASING_LINEAR, SANTA_TIMING)
	else
		self.santa_direction = 1
		go.set_position(vmath.vector3(-100, (gameHeight-80)/ZOOM_LEVEL, 1), "/santa_sleigh")
		go.animate("/santa_sleigh", "position.x", go.PLAYBACK_ONCE_FORWARD, (gameWidth+1000)/ZOOM_LEVEL, go.EASING_LINEAR, SANTA_TIMING)
	end
end


-- Create new gifts using the gift prototype
function CreateGifts(self, pCount)
	for i=1, pCount do
		-- Z axis on 3 values : 0.1, 0.2 or 0.3   (1 = in back  2 = middle   3 = in front)
		local index = math.random(1,3)
		local z = GIFT_Z_ORDER[index]
		local pos = vmath.vector3(math.random(40, (gameWidth-50)/ZOOM_LEVEL), math.random(gameHeight-250, gameHeight-200)/ZOOM_LEVEL, z)

		factory.create("/factoryGift#factory", pos, nil, { position = pos, z_index = index }, 0.6 + z)
		self.totalGifts = self.totalGifts + 1
	end
end

-- Create bags using the bag prototype
-- pColor : BLUE = 1, GREEN = 2, RED = 3
-- pPosition : LEFT = 1, CENTER = 2, RIGHT = 3
function CreateBag(pColor, pPosition)
	local pos = vmath.vector3()
	if pPosition == 1 then
		pos = vmath.vector3(37,90,0)
	elseif pPosition == 2 then
		pos = vmath.vector3(96,90,0)
	elseif pPosition == 3 then
		pos = vmath.vector3(150,90,0)
	end

	factory.create("/factoryBag#factory", pos, nil, { color = pColor }, 1.0)
end

-- Create the snow effect using the snow prototype
function CreateSnowEffect(pCount)
	local count = 0
	timer.delay(0.5, true, function (_,pbar_timer,_)
		factory.create("/factorySnow#factory", vmath.vector3(0,0,0))
		count = count + 1

		if count >= pCount then
			timer.cancel(pbar_timer)
		end
	end)
end

-- Create the star effect when the player put gift in the correct bag using the star prototype
function CreateStarEffect(pCount, pBagX, pBagY)
	local count = 0

	timer.delay(0.02, true, function (_,pbar_timer,_)
		factory.create("/factoryStar#factory", vmath.vector3(pBagX,pBagY,0))
		count = count + 1

		if count >= pCount then
			timer.cancel(pbar_timer)
		end
	end)
end
