--local defmath = require("defmath.defmath")	-- to use https://github.com/subsoap/defmath
require("src.scripts.utils.utils")


function init(self)
    msg.post(".", "acquire_input_focus")

    self.pressed = false
	self.collision_id = nil		-- GO's id which the cursor collided with
	self.dragged_id = nil		-- GO's id currently dragged
    self.cursor_position = vmath.vector3()
end


function update(self, dt) 
    self.collision_id = nil
end


function on_input(self, action_id, action)
    -- Display debug collision boxes
    if action_id == hash("debug_collision") and DEBUG_MODE then
        Debug_Tools(self, "COLLISION")
    end

    -- Move the object
    if not action_id or action_id == INPUT.TOUCH then
		-- Set the GO cursor position to be the same as the "real" cursor
        self.cursor_position.x = action.x / ZOOM_LEVEL
        self.cursor_position.y = action.y / ZOOM_LEVEL
        go.set_position(self.cursor_position)

        -- Move the object following the cursor
        Moving_Object(self, action)
    end
end


function on_message(self, message_id, message, sender)
    if message_id == MESSAGE.COLLISION then
        -- Check if we are not already dragging an object
        if self.dragged_id == nil then
            -- Check if we are not already colliding with an object
            --      and select the object with the higher Z value
            if self.collision_id == nil or go.get_position(self.collision_id).z > message.other_position.z then
                self.collision_id = message.other_id
            end
        end
    end
end


function final(self) end
function on_reload(self) end

-------------------------------------------------------------------------------------------------------------

-- Move the object following the cursor
function Moving_Object(self, action)
    -- Detect if a press or release occurs
    if action.pressed and self.pressed == false then
        self.pressed = true
    end
    if action.released and self.dragged_id ~= nil and self.pressed == true then
        self.pressed = false
        -- The gift fall
        msg.post(self.dragged_id, "activate_gravity", { position = go.get_position() })
        self.dragged_id = nil
    end

    -- If we are clicking and the GO collide with another GO
    if self.pressed and self.collision_id ~= nil then
        self.dragged_id = self.collision_id
    end

    if self.dragged_id then --and self.dragging then
        go.set_position(self.cursor_position, self.dragged_id)
    end
end

