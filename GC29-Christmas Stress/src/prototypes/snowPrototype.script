--local defmath = require("defmath.defmath")	-- to use https://github.com/subsoap/defmath
--require("src.scripts.utils.utils")

--local TYPE = { "snow1", "snow2", "snowball" }

-------------------------------------------------------------------------------------------------------------

function init(self)
	self.position = vmath.vector3(math.random(1, gameWidth/ZOOM_LEVEL), gameHeight/ZOOM_LEVEL, 1)
	self.scale = math.random(1,2)/10
	self.speed = math.random(2,4)
	self.increase_size = true

	Start_Snow(self)
end

function update(self, dt) end
function on_message(self, message_id, message, sender) end
function on_input(self, action_id, action) end
function final(self) end
function on_reload(self) end

-------------------------------------------------------------------------------------------------------------

function Start_Snow(self)
	local x_destination = math.random(self.position.x-100, self.position.x+100)
	--local type = TYPE[math.random(1, 3)]
	local type = "snowball"

	--local scale = math.random(2, 8)/10
	--local alpha = math.random(5, 10)/10
	local alpha = math.random(8, 9)/10

	-- Set the new animation name (= texture), scale and alpha
	msg.post("#sprite", "play_animation", { id = hash(type) })
	go.set_scale(self.scale)
	go.set("#sprite", "tint.w", alpha) -- "tint" is a vector4 with x, y, z, w fields. 

	-- Snowflake animation
	go.set_position(self.position)
	go.animate(go.get_id(), "position.x", go.PLAYBACK_ONCE_FORWARD, x_destination, go.EASING_LINEAR, 7)
    go.animate(go.get_id(), "position.y", go.PLAYBACK_ONCE_FORWARD, -20, go.EASING_LINEAR, self.speed, 0, Done_Snow)
end

-- When the snowflake is at the bottom of the screen, replace it at the top of the screen
function Done_Snow(self, url, property)
	-- Increase or decrease snowflake size during its lifetime
	if self.scale <= 1 and self.increase_size then
		self.scale = self.scale + 0.3
		print(self.speed)
		if self.speed > 1 then self.speed = self.speed - 0.5 end
	else
		self.scale = self.scale - 0.3
		self.increase_size = false
	end
	go.set_scale(self.scale)

	-- Delete the object
	if self.scale <= 0.3 then
		go.delete()
	end

	self.position = vmath.vector3(math.random(1, gameWidth/ZOOM_LEVEL), gameHeight/ZOOM_LEVEL, 1)
	Start_Snow(self)
end
