--local defmath = require("defmath.defmath")	-- to use https://github.com/subsoap/defmath
require("src.scripts.utils.utils")

local COLOR = { "gift_blue", "gift_green", "gift_red" }

go.property("position", vmath.vector3())
go.property("borderdownID", 0)		-- to know with which borderground the gift will collide (bordergroundZ*)
go.property("swipe_from", vmath.vector3())
go.property("swipe_to", vmath.vector3())

-------------------------------------------------------------------------------------------------------------

function init(self)
	--self.position = vmath.vector3(0)
	self.color = ""
	self.type = 0

	self.velocity = vmath.vector3(0,-10,0)
	self.speed = 5
	self.isGravityActive = true
	self.isOnGround = true

	CreateRandomGift(self)
end

function update(self, dt)
	if self.isGravityActive then
		self.position.x = self.position.x + self.velocity.x * self.speed * dt
		self.position.y = self.position.y + self.velocity.y * self.speed * dt

		go.set_position(self.position)
	end
end

function on_message(self, message_id, message, sender)
	-- If collide with the ground
	if message_id == MESSAGE.COLLISION and message.other_group == hash("border") then
		-- If collide with a down border, the gift stop on it
		if message.other_id == hash("/bordergroundZ"..self.borderdownID) then
			self.isGravityActive= false
			self.isOnGround = true
		end

		-- If collide with a side border, stop the x movement
		if message.other_id == hash("/borderleft") then
			self.velocity.x = 0
			self.position.x = 30
		elseif message.other_id == hash("/borderright") then
			self.velocity.x = 0
			self.position.x = gameWidth/ZOOM_LEVEL - 30
		end
	end

	-- Activate the gravity
	if message_id == hash("activate_gravity") then
		self.position = message.position
		self.swipe_from = message.swipe_from
		self.swipe_to = message.swipe_to

		-- Add a X movement when the user swipe the gift
		if self.swipe_from ~= nil and self.swipe_to ~= nil then
			self.velocity.x = (self.swipe_to.x - self.swipe_from.x)/5
		end

		self.isGravityActive = true
		self.isOnGround = false
	end
end

function on_input(self, action_id, action) end
function final(self) end
function on_reload(self) end

-------------------------------------------------------------------------------------------------------------

-- Create a random gift
function CreateRandomGift(self)
	-- Choose a random type and color
	self.type = math.random(1,3)
	self.color = COLOR[math.random(1,3)]

	-- Set the new animation name (= texture)
	msg.post("#sprite", "play_animation", {id = hash(self.color..self.type)})
end
