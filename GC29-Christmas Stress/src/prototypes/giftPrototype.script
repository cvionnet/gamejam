--local defmath = require("defmath.defmath")	-- to use https://github.com/subsoap/defmath
require("src.scripts.utils.utils")

local COLOR = { "gift_blue", "gift_green", "gift_red" }

go.property("position", vmath.vector3())
go.property("borderdownID", 0)		-- to know with which borderbown the gift will collide (borderdownZ1, borderdownZ2 or borderdownZ3)

-------------------------------------------------------------------------------------------------------------

function init(self)
	--self.position = vmath.vector3(0)
	self.color = ""
	self.type = 0

	self.velocity = vmath.vector3(0,-10,0)
	self.speed = 5
	self.isGravityActive = true

	InitializeGift(self)
end

function update(self, dt)
	if self.isGravityActive then
		self.position.y = self.position.y + self.velocity.y * self.speed * dt
		go.set_position(self.position)
	end
end

function on_message(self, message_id, message, sender)
	-- If collide with a border
	if message_id == MESSAGE.COLLISION and message.other_group == hash("border") then
		-- If collide with the border the gift must stop on
		if message.other_id == hash("/borderdownZ"..self.borderdownID) then
			self.isGravityActive= false
		end
	end

	-- Activate the gravity
	if message_id == hash("activate_gravity") then
		self.position = message.position
		self.isGravityActive = true
	end
end

function on_input(self, action_id, action) end
function final(self) end
function on_reload(self) end

-------------------------------------------------------------------------------------------------------------

-- Create a random gift
function InitializeGift(self)
	-- Choose a random type and color
	self.type = math.random(1,3)
	self.color = COLOR[math.random(1,3)]

	-- Set the new animation name (= texture)
	msg.post("#sprite", "play_animation", {id = hash(self.color..self.type)})
end
